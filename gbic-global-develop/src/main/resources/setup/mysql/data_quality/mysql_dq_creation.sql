-- MySQL Script generated by MySQL Workbench
-- 03/18/16 09:06:56
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gbic_data_quality
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `{{ db.schema_dq }}` ;

-- -----------------------------------------------------
-- Schema gbic_data_quality
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `{{ db.schema_dq }}` DEFAULT CHARACTER SET utf8 ;
USE `{{ db.schema_dq }}` ;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`project` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`project` (
  `id_project` INT NOT NULL AUTO_INCREMENT,
  `project_name` VARCHAR(32) NOT NULL,
  `project_desc` VARCHAR(256) NULL,
  `project_schema` VARCHAR(32) NULL,
  PRIMARY KEY (`id_project`),
  UNIQUE INDEX `project_name_UNIQUE` (`project_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`country` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`country` (
  `gbic_op_id` INT NOT NULL,
  `country_name` VARCHAR(45) NOT NULL,
  `country_iso2` VARCHAR(2) NULL,
  `country_iso3` VARCHAR(3) NULL,
  `country_number` INT NULL,
  `country_prefix` INT NULL,
  PRIMARY KEY (`gbic_op_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`file_entity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`file_entity` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`file_entity` (
  `id_fileentity` INT NOT NULL,
  `id_project` INT NULL,
  `file_name` VARCHAR(64) NULL,
  `file_pattern` VARCHAR(128) NULL,
  `file_desc` VARCHAR(512) NULL,
  `file_table` VARCHAR(64) NULL,
  PRIMARY KEY (`id_fileentity`),
  INDEX `fk_file_entity_project_idx` (`id_project` ASC),
  CONSTRAINT `fk_file_entity_project`
    FOREIGN KEY (`id_project`)
    REFERENCES `{{ db.schema_dq }}`.`project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`file_instance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`file_instance` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`file_instance` (
  `id_fileinstance` INT NOT NULL AUTO_INCREMENT,
  `id_fileentity` INT NULL,
  `content_dt` DATE NULL,
  `gbic_op_id` INT NULL,
  PRIMARY KEY (`id_fileinstance`),
  INDEX `fk_file_instance_file_entity1_idx` (`id_fileentity` ASC),
  INDEX `fk_file_instance_content_dt1_idx` (`content_dt` ASC),
  INDEX `fk_file_instance_country1_idx` (`gbic_op_id` ASC),
  CONSTRAINT `fk_file_instance_file_entity1`
    FOREIGN KEY (`id_fileentity`)
    REFERENCES `{{ db.schema_dq }}`.`file_entity` (`id_fileentity`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_file_instance_country1`
    FOREIGN KEY (`gbic_op_id`)
    REFERENCES `{{ db.schema_dq }}`.`country` (`gbic_op_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`file_revision`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`file_revision` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`file_revision` (
  `id_filerevision` INT NOT NULL AUTO_INCREMENT,
  `id_fileinstance` INT NULL,
  `file_revision_num` INT NULL,
  `file_checksum` VARCHAR(128) NULL,
  `file_process_date` DATE NULL,
  `file_size` DOUBLE NULL,
  PRIMARY KEY (`id_filerevision`),
  CONSTRAINT `fk_file_revision_file_instance1`
    FOREIGN KEY (`id_fileinstance`)
    REFERENCES `{{ db.schema_dq }}`.`file_instance` (`id_fileinstance`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`screen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`screen` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`screen` (
  `id_screen` INT NOT NULL,
  `id_fileentity` INT NULL,
  `screen_number` INT NULL,
  `screen_type` VARCHAR(1) NULL,
  `screen_field` VARCHAR(64) NULL,
  `screen_desc` VARCHAR(256) NULL,
  PRIMARY KEY (`id_screen`),
  INDEX `fk_screen_file_entity1_idx` (`id_fileentity` ASC),
  CONSTRAINT `fk_screen_file_entity1`
    FOREIGN KEY (`id_fileentity`)
    REFERENCES `{{ db.schema_dq }}`.`file_entity` (`id_fileentity`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`test` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`test` (
  `id_test` INT NOT NULL,
  `id_fileentity` INT NULL,
  `test_type` VARCHAR(1) NULL,
  `test_number_file` VARCHAR(45) NULL,
  `test_desc` VARCHAR(256) NULL,
  `test_field` VARCHAR(64) NULL,
  `test_field_content` VARCHAR(64) NULL,
  `test_expected_value` DOUBLE NULL,
  `error_threshold` FLOAT NULL,
  `warn_threshold` FLOAT NULL,
  INDEX `fk_test_instance_file_entity1_idx` (`id_fileentity` ASC),
  PRIMARY KEY (`id_test`),
  CONSTRAINT `fk_test_instance_file_entity1`
    FOREIGN KEY (`id_fileentity`)
    REFERENCES `{{ db.schema_dq }}`.`file_entity` (`id_fileentity`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`test_result`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`test_result` ;

CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`test_result` (
  `id_filerevision` INT NOT NULL,
  `id_test` INT NOT NULL,
  `test_type` VARCHAR(1) NOT NULL,
  `screen_number` INT NOT NULL,
  `test_number_file` INT NOT NULL,
  `test_field` VARCHAR(64) NOT NULL,
  `test_field_content` VARCHAR(64) NOT NULL,
  `test_expected_value` DOUBLE NULL,
  `test_resulting_value` DOUBLE NULL,
  `warn_threshold` FLOAT NULL,
  `error_threshold` FLOAT NULL,
  `test_state` VARCHAR(5) NULL,
  PRIMARY KEY (`id_filerevision`, `id_test`, `test_type`, `screen_number`, `test_number_file`, `test_field`, `test_field_content`),
  INDEX `fk_test_result_test1_idx` (`id_test` ASC),
  CONSTRAINT `fk_test_result_file_revision1`
    FOREIGN KEY (`id_filerevision`)
    REFERENCES `{{ db.schema_dq }}`.`file_revision` (`id_filerevision`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_result_test1`
    FOREIGN KEY (`id_test`)
    REFERENCES `{{ db.schema_dq }}`.`test` (`id_test`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `{{ db.schema_dq }}`;

-- -----------------------------------------------------
-- Placeholder table for view `{{ db.schema_dq }}`.`file_revision_test`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`file_revision_test` (
  `id_filerevision` INT,
  `id_fileentity` INT,
  `id_test` INT,
  `test_type` INT,
  `test_number_file` INT,
  `file_process_date` INT,
  `test_desc` INT,
  `test_field` INT,
  `test_field_content` INT,
  `test_expected_value` INT,
  `error_threshold` INT,
  `warn_threshold` INT);

-- -----------------------------------------------------
-- View `{{ db.schema_dq }}`.`file_revision_test`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `{{ db.schema_dq }}`.`file_revision_test` ;
DROP TABLE IF EXISTS `{{ db.schema_dq }}`.`file_revision_test`;
USE `{{ db.schema_dq }}`;
CREATE  OR REPLACE VIEW file_revision_test AS
select id_filerevision,
       i.id_fileentity,
       id_test,
       test_type,
       test_number_file,
       file_process_date,
       test_desc,test_field,
       test_field_content,test_expected_value,error_threshold,warn_threshold 
from (
  file_revision r
join
  file_instance i
join
  test t
on
  r.id_fileinstance = i.id_fileinstance AND
  i.id_fileentity = t.id_fileentity
);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Table `{{ db.schema_dq }}`.`test_result` `{{ db.schema_dq }}`.`service_checks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `{{ db.schema_dq }}`.`service_checks` (
  `processing_date` VARCHAR(12) NOT NULL COMMENT 'File processing date',
  `content_date`    VARCHAR(12) NOT NULL COMMENT 'File content date',
  `project_name`    VARCHAR(12) NOT NULL COMMENT 'Project name' ,
  `file_name`       VARCHAR(12) NOT NULL COMMENT 'File name' ,
  `countryIso3`     VARCHAR(12) NOT NULL COMMENT 'Two character country code according to ISO 3166-1 alpha-2 standard' ,
  `screenNumber`    INT         NOT NULL COMMENT 'Screen number',
  `screenDesc`      VARCHAR(12)          COMMENT 'Screen description',
  `field`           VARCHAR(12)          COMMENT 'Field to assess',
  `fieldContent`    VARCHAR(12)          COMMENT 'Field content',
  `fieldValue`      DOUBLE               COMMENT 'Field value',
  PRIMARY KEY (`processing_date`,`content_date`,`project_name`,`file_name`,`countryIso3`,`screenNumber`,`field`,`fieldContent`))
ENGINE = InnoDB COMMENT 'Quality metrics' ;
